// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Urge status enum - using string values to match shared-types enum
enum UrgeStatus {
  PENDING   @map("PENDING")   // Initial state when urge is first created
  PEACEFUL  @map("PEACEFUL")  // Outcome 1: User feels peaceful after the delay
  PRESENT   @map("PRESENT")   // Outcome 2: Urge is still present after the delay
  OVERCOME  @map("OVERCOME")  // Outcome 3: Urge took over the user
}

model User {
  id         String   @id @default(uuid())
  deviceId   String   @unique // Unique device identifier
  createTime DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamptz(6)
  updateTime DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamptz(6)
  urges      Urge[]   // Relation to urges
}

model Urge {
  id         Int        @id @default(autoincrement())
  type       String     // Type of urge
  count      Int        @default(0)
  status     UrgeStatus @default(PENDING) // Current status of the urge
  userId     String?    // Still optional to handle existing data
  user       User?      @relation(fields: [userId], references: [id])
  createTime DateTime   @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamptz(6)
  updateTime DateTime   @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamptz(6)
  
  // No onDelete because we want to keep urges if a user is deleted
}
